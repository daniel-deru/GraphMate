{"version":3,"sources":["components/jsx/Download.jsx","state/actionCreators/index.js","components/jsx/Header.jsx","components/jsx/Home.jsx","components/jsx/Chart.jsx","components/jsx/Fields/General.jsx","components/jsx/Fields/Cartesian.jsx","components/jsx/Fields/Bars.jsx","components/jsx/Graphs/Bar.jsx","components/jsx/Fields/Lines.jsx","components/jsx/Graphs/Line.jsx","components/jsx/Graphs/Pie.jsx","components/jsx/Graphs/Histogram.jsx","components/jsx/Graphs/Scatter.jsx","App.jsx","reportWebVitals.js","state/reducers/dataReduser.js","state/reducers/typeReduser.js","state/reducers/deviceReducer.js","state/reducers/combinedReducers.js","state/store.js","index.js"],"names":["Download","sizeRef","useRef","formatRef","generateImage","format","canvasWidth","canvasHeight","a","graph","document","querySelector","filter","tagName","htmlToImage","imageData","download","id","htmlFor","ref","name","value","disabled","selected","type","placeholder","onClick","current","width","Math","ceil","parseInt","children","height","downloadHandler","loadGraph","data","dispatch","payload","loadData","setDevice","supported","Header","history","useHistory","useDispatch","useSelector","state","canUse","bindActionCreators","actionCreators","useEffect","reload","window","location","pathname","substring","onChange","e","path","route","target","push","handleRoute","exact","to","Home","screen","Chart","useState","setData","storeData","layout","paper_bgcolor","bgColor","plot_bgcolor","innerWidth","title","titlefont","color","titleColor","size","titleSize","xaxis","xTitle","xTitleColor","xTitleSize","tickfont","xScaleColor","xScaleSize","zeroline","showgrid","showGrid","tickangle","tickAngle","yaxis","yTitle","yTitleColor","yTitleSize","yScaleColor","yScaleSize","showline","showLines","values","y","labels","x","marker","colors","textposition","textPosition","textinfo","pieText","hole","mode","histnorm","histNorm","text","textInside","textfont","line","dash","dotSize","createGraph","length","config","scrollZoom","staticPlot","displayModeBar","showlegend","displaylogo","General","inputHandler","graphData","graphType","split","className","cols","rows","Cartesian","checked","min","max","Bars","Bar","Lines","Line","Pie","Histogram","Scatter","App","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","dataSample","dataReduser","action","typeReduser","redusers","combineReducers","deviceReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b5fb2f7b.chunk.js","sourcesContent":["// Libs\r\nimport * as htmlToImage from \"html-to-image\"\r\nimport download from \"downloadjs\"\r\n\r\n// CSS\r\nimport \"../css/Download.css\"\r\n\r\n// Hooks\r\nimport { useRef, useState } from \"react\"\r\n\r\nconst Download = () => {\r\n    const sizeRef = useRef()\r\n    const formatRef = useRef()\r\n\r\n    const make_image = () => {\r\n        const graphImage = document.querySelector(\"#data\")\r\n        htmlToImage.toPng(graphImage).then((dataURL) => {\r\n          const image = new Image()\r\n          image.src = dataURL\r\n          download(dataURL, \"node.png\")\r\n        //   const doc = new jsPDF('p', 'mm', 'a4')\r\n        //   doc.addImage(dataURL, \"png\", 10, 78)\r\n        //   doc.save(\"image\")\r\n        })\r\n      }\r\n\r\n      const downloadHandler = () => {\r\n        const format = formatRef.current.value\r\n        const width = Math.ceil(parseInt(sizeRef.current.children[1].value/1.65))\r\n        const height = Math.ceil(parseInt(sizeRef.current.children[3].value/1.65))\r\n        generateImage(format, width, height)\r\n      }\r\n\r\n      const generateImage = async (format, canvasWidth, canvasHeight) => {\r\n          const graph = document.querySelector(\"#data\")\r\n        if (format === \"svg\"){\r\n            const filter = () => graph.tagName !== \"i\"\r\n            const imageData = await htmlToImage.toSvg(graph, {canvasWidth, canvasHeight, filter})\r\n            download(imageData, \"graph.svg\")\r\n        }\r\n        else {\r\n            const imageData = await htmlToImage.toPng(graph, {canvasWidth, canvasHeight})\r\n            download(imageData, \"graph.png\")\r\n        }\r\n        \r\n      }\r\n\r\n    return (\r\n        <section id=\"download\">\r\n            <div>\r\n                <label htmlFor=\"format\">Choose an Image Format</label>\r\n                <select ref={formatRef} name=\"format\" id=\"\" >\r\n                    <option value=\"\" disabled selected>Choose an Image Format</option>\r\n                    <option value=\"png\">PNG</option>\r\n                    <option value=\"svg\">SVG</option>\r\n                </select>\r\n            </div>\r\n            <div ref={sizeRef}>\r\n                <label htmlFor=\"\">Choose Width And Height</label>\r\n                <input id=\"image-width\" type=\"number\" placeholder=\"Enter a width in pixels\" />\r\n                <span>X</span>\r\n                <input id=\"image-height\" type=\"number\" placeholder=\"Enter a height in pixels\" />\r\n            </div>\r\n            <div>\r\n                <button onClick={() => downloadHandler()}>Download</button>\r\n            </div>\r\n            \r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Download\r\n","export const loadGraph = (data) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: \"update graph\",\r\n            payload: data\r\n        })\r\n    }\r\n}\r\n\r\nexport const loadData = (data) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: \"update data\",\r\n            payload: data\r\n        })\r\n    }\r\n}\r\n\r\nexport const setDevice = (supported) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: \"set device\",\r\n            payload: supported\r\n        })\r\n    }\r\n}\r\n","import \"../css/Header.css\"\r\n\r\n// Redux\r\nimport { actionCreators } from \"../../state/actionCreators/export\"\r\nimport { bindActionCreators } from \"redux\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\n\r\n\r\n// Hooks\r\nimport { useEffect } from \"react\"\r\n\r\n// Router\r\nimport { useHistory } from \"react-router\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { loadData } from \"../../state/actionCreators\"\r\n\r\nconst Header = () => {\r\n    const history = useHistory()  \r\n    const dispatch = useDispatch()\r\n\r\n    const type = useSelector( (state) => state.type)\r\n    const data = useSelector((state) => state.data)\r\n    const canUse = useSelector((state) => state.canUse)\r\n\r\n    const { loadGraph } = bindActionCreators(actionCreators, dispatch)\r\n    \r\n    useEffect(() => {\r\n        reload()\r\n    }, [type])\r\n    \r\n    const handleRoute = (e, path) => {\r\n        const route = e.target.value\r\n        history.push(route)\r\n        if (path == \"/\") window.location.reload()\r\n        loadGraph(route.substring(1))\r\n        loadData(data)\r\n    }\r\n\r\n    const reload = () => loadGraph(window.location.pathname.substring(1)) \r\n\r\n    return (\r\n        <header>\r\n            <h1>GraphMate</h1>\r\n            <div>\r\n              { canUse && <select name=\"chart\" id=\"chart-select\" onChange={(e) => handleRoute(e, window.location.pathname)}>\r\n                    <option value=\"/\" disabled selected>Select Chart Type</option>\r\n                    <option value=\"/line\">Line Chart</option>\r\n                    <option value=\"/bar\">Bar Chart</option>\r\n                    <option value=\"/pie\">Pie Chart</option>\r\n                    <option value=\"/histogram\">Histogram</option>\r\n                    <option value=\"/scatter\">Scatter Plot</option>\r\n                </select>}\r\n\r\n                { canUse && <><Link id=\"btn-download\" exact to=\"/download\">Download</Link></> }\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport \"../css/Home.css\"\r\n\r\nimport { useEffect, useState } from 'react'\r\n\r\n// Redux\r\nimport { actionCreators } from '../../state/actionCreators/export'\r\nimport { bindActionCreators } from 'redux'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\n\r\nconst Home = () => {\r\n    const dispatch = useDispatch()\r\n    const { setDevice } = bindActionCreators(actionCreators, dispatch)\r\n\r\n    const canUse = useSelector((state) => state.canUse)\r\n\r\n\r\n    useEffect(() => {\r\n        if (window.screen.width < 800){\r\n            setDevice(false)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div id=\"home\">\r\n            {canUse && <h1>Choose a graph and start building!</h1>}\r\n            {!canUse && <h1>Sorry your device cannot use this application, please use a desktop</h1>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","//CSS\r\nimport \"../css/Chart.css\"\r\n\r\n// Third party Libs\r\nimport Plot from \"react-plotly.js\"\r\n\r\n// Redux\r\nimport { useSelector } from \"react-redux\"\r\n\r\n// Hooks\r\nimport { useEffect, useState } from \"react\"\r\n\r\nconst Chart = () => {\r\n    const [data, setData] = useState()\r\n    const type = useSelector( ( state ) => state.type)\r\n    const storeData = useSelector((state) => state.data)\r\n\r\n    const layout = {\r\n        paper_bgcolor: storeData.bgColor,\r\n        plot_bgcolor: storeData.bgColor,\r\n        width: window.innerWidth/2,\r\n        title: storeData.title,\r\n        titlefont: {\r\n            color: storeData.titleColor,\r\n            size: storeData.titleSize\r\n        },\r\n        xaxis: {\r\n            title: storeData.xTitle,\r\n            titlefont: {\r\n                color: storeData.xTitleColor,\r\n                size: storeData.xTitleSize\r\n            },\r\n            tickfont: {\r\n                color: storeData.xScaleColor,\r\n                size: storeData.xScaleSize\r\n            },\r\n            zeroline: false,\r\n            showgrid: storeData.showGrid,\r\n            tickangle: storeData.tickAngle,\r\n        },\r\n        yaxis: {\r\n            title: storeData.yTitle,\r\n            titlefont: {\r\n                color: storeData.yTitleColor,\r\n                size: storeData.yTitleSize\r\n            },\r\n            tickfont: {\r\n                color: storeData.yScaleColor,\r\n                size: storeData.yScaleSize\r\n            },\r\n            showline: storeData.showLines\r\n        }\r\n    }\r\n\r\n    const createGraph = () => {\r\n        let mode = null\r\n        switch(window.location.pathname){\r\n            case \"/scatter\": mode = \"markers\"\r\n            break\r\n            case \"/line\": mode = \"lines+markers\"\r\n            break\r\n            default: mode = null\r\n        }\r\n        const data = [\r\n            {\r\n                y: storeData.y,\r\n                x: storeData.x,\r\n                type: type,\r\n                mode: mode,\r\n                histnorm: storeData.histNorm,\r\n                width: storeData.width,\r\n                text: storeData.textInside,\r\n                textfont: {\r\n                    color: storeData.titleColor,\r\n                    size: storeData.titleSize\r\n                },\r\n                textposition: \"auto\",\r\n                line: {\r\n                    width: storeData.width,\r\n                    color: storeData.colors,\r\n                    dash: storeData.dash\r\n                },\r\n                marker: {\r\n                    color: storeData.colors,\r\n                    size: storeData.dotSize,\r\n                }\r\n                \r\n            }\r\n        ]\r\n        return data\r\n    }\r\n\r\n    const createPie = () => {\r\n        const data = [\r\n            {\r\n                values: storeData.y,\r\n                labels: storeData.x,\r\n                type: type,\r\n                marker: {\r\n                    colors: storeData.colors\r\n                },\r\n                textposition: storeData.textPosition,\r\n                textinfo: storeData.pieText,\r\n                hole: storeData.hole\r\n            }\r\n        ]\r\n        return data\r\n    }\r\n\r\n    useEffect(() => {\r\n        const data = type == \"pie\" ? createPie() : createGraph()\r\n        if(storeData.colors.length == 1){\r\n            storeData.colors = storeData.colors[0]\r\n        }\r\n        setData(data)\r\n    }, [type])\r\n\r\n    \r\n    return (\r\n        <div id=\"data\">\r\n            <Plot\r\n                id=\"chart\"\r\n                data={data}\r\n                layout={layout}\r\n                config={{   scrollZoom: false,\r\n                            staticPlot: true,\r\n                            displayModeBar: false,\r\n                            showlegend: true,\r\n                            displaylogo: false\r\n                        }}\r\n           />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart\r\n","// import \"../../css/General.css\"\r\nimport \"../../css/Fields.css\"\r\n\r\n\r\n// Redux\r\nimport { bindActionCreators } from 'redux'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { actionCreators } from '../../../state/actionCreators/export'\r\n\r\n// Hooks\r\nimport { useState } from \"react\"\r\n\r\nconst General = () => {\r\n    const data = useSelector((state) => state.data)\r\n    const dispatch = useDispatch()\r\n    const { loadData } = bindActionCreators(actionCreators, dispatch)\r\n\r\n    const inputHandler = (e) => {\r\n        let graphData = {...data}\r\n        const value = e.target.value\r\n        const graphType = window.location.pathname\r\n        switch (e.target.id) {\r\n            case \"background-color\":\r\n                graphData.bgColor = value\r\n                break\r\n            case \"title\": \r\n                graphData.title = value\r\n                break\r\n            case \"graph-color\": \r\n                graphData.colors = window.location.pathname == \"/line\" ? value : value.split(\",\")\r\n                break\r\n            case \"title-color\":\r\n                graphData.titleColor = value\r\n                break\r\n            case \"title-size\":\r\n                graphData.titleSize = value\r\n                break\r\n            case \"x-values\":\r\n                if(graphType == \"/histogram\"){\r\n                   if (value) {\r\n                    graphData.x = value.split(\",\")\r\n                    graphData.y = null\r\n                   } else {\r\n                    graphData.x = null\r\n                   }\r\n                } else {\r\n                    graphData.x = value.split(\",\")\r\n                }\r\n                break\r\n            case \"y-values\":\r\n                if(graphType == \"/histogram\"){\r\n                    if (value) {\r\n                     graphData.y = value.split(\",\")\r\n                     graphData.x = null\r\n                    } else {\r\n                     graphData.y = null\r\n                    }\r\n                 } else {\r\n                     graphData.y = value.split(\",\")\r\n                 }\r\n                break\r\n        }\r\n        loadData(graphData)\r\n    }\r\n    return (\r\n        <section id=\"general\" className=\"\">\r\n\r\n            <div className=\"\" >\r\n                <label htmlFor=\"Title\">Enter Your Title</label>\r\n                <input type=\"text\" id=\"title\" placeholder=\"My Title\" name=\"Title\"  onChange={(e) => inputHandler(e)}/>\r\n            </div>\r\n\r\n            <div className=\"\" >\r\n                <label htmlFor=\"theme\">Choose Your Graph Color</label>\r\n                <input type=\"text\" id=\"graph-color\" placeholder=\"blue, #f9f9f9, red\" name=\"color\" onChange={(e) => inputHandler(e)}/>\r\n            </div>\r\n\r\n            <div className=\"\">\r\n                <label htmlFor=\"titlecolor\">Title Color</label>\r\n                <input type=\"text\" id=\"title-color\" name=\"titlecolor\" placeholder=\"Example: #45ff00\" onChange={(e) => inputHandler(e)}/>\r\n            </div>\r\n\r\n            <div>\r\n                <label htmlFor=\"titlesize\">Title Size</label>\r\n                <input type=\"text\" id=\"title-size\" name=\"titlesize\" placeholder=\"Example: 2\" onChange={(e) => inputHandler(e)}/>\r\n            </div>\r\n            <div  className=\"\">\r\n                <label htmlFor=\"labels\">Labels or X</label>\r\n                <textarea  name=\"labels\" id=\"x-values\" placeholder=\"Example: Label1, Label2, Label3\" cols=\"30\" rows=\"10\" onChange={(e) => inputHandler(e)}></textarea>\r\n            </div>\r\n            <div  className=\"\">\r\n                <label htmlFor=\"values\">Values or Y</label>\r\n                <textarea name=\"values\" id=\"y-values\" placeholder=\"Example: 2, 3, 4\" cols=\"30\" rows=\"10\" onChange={(e) => inputHandler(e)}></textarea>\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"\">Choose a Background Color</label>\r\n                <input id=\"background-color\" type=\"color\" placeholder=\"Chart Background Color\" onChange={(e) => inputHandler(e)}/>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default General\r\n","// import \"../../css/Cartesian.css\"\r\nimport \"../../css/Fields.css\"\r\n\r\n// Redux\r\nimport { actionCreators } from \"../../../state/actionCreators/export\"\r\nimport { bindActionCreators } from \"redux\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\n\r\nconst Cartesian = () => {\r\n    const dispatch = useDispatch()\r\n    const { loadData } = bindActionCreators(actionCreators, dispatch)\r\n    const data = useSelector((state) => state.data)\r\n\r\n// These are the ids used in the switch statement for reference\r\n// showlines\r\n// showgrid\r\n// width\r\n// tick-angle\r\n// x-title-color\r\n// x-title-size\r\n// y-title-color\r\n// y-title-size\r\n// x-title\r\n// y-title\r\n\r\n    const inputHandler = (e) => {\r\n        let graphData = {...data}\r\n        const value = e.target.value\r\n        const checked = e.target.checked\r\n        switch (e.target.id) {\r\n            case \"showlines\":\r\n                graphData.showLines = checked\r\n                break\r\n            case \"showgrid\":\r\n                graphData.showGrid = checked\r\n                break\r\n            case \"width\":\r\n                graphData.width = (value / 20)\r\n                break\r\n            case \"tick-angle\": \r\n                graphData.tickAngle = (value/100*360)\r\n                break\r\n            case \"x-title-color\":\r\n                graphData.xTitleColor = value\r\n                break\r\n            case \"x-title-size\":\r\n                graphData.xTitleSize = value\r\n                break\r\n            case \"y-title-color\":\r\n                graphData.yTitleColor = value\r\n                break\r\n            case \"y-title-size\":\r\n                graphData.yTitleSize = value\r\n                break\r\n            case \"x-title\":\r\n                graphData.xTitle = value\r\n                break\r\n            case \"y-title\":\r\n                graphData.yTitle = value\r\n                break\r\n            case \"x-scale-color\":\r\n                graphData.xScaleColor = value\r\n                break\r\n            case \"x-scale-size\":\r\n                graphData.xScaleSize = value\r\n                break\r\n            case \"y-scale-color\":\r\n                graphData.yScaleColor = value\r\n                break\r\n            case \"y-scale-size\":\r\n                graphData.yScaleSize = value\r\n                break\r\n\r\n        }\r\n        loadData(graphData)\r\n    }\r\n\r\n    return (\r\n        <section className=\"\">\r\n            <div className=\"\">\r\n                <label htmlFor=\"x-name\">X-Axis Title</label>\r\n                <input type=\"text\" id=\"x-title\" placeholder=\"Example: My X-axis\" onChange={(e) => inputHandler(e)}/>\r\n            </div>\r\n\r\n            <div className=\"\">\r\n                <label htmlFor=\"y-name\">Y-Axis Title</label>\r\n                <input type=\"text\" id=\"y-title\" placeholder=\"Example: My Y-axis\" onChange={(e) => inputHandler(e)}/>\r\n            </div>\r\n\r\n\r\n            <div className=\"\">\r\n                <label htmlFor=\"xtitlecolor\">X-Axis Title Color</label>\r\n                <input type=\"text\" name=\"xtitlecolor\" id=\"x-title-color\" placeholder=\"Example: #ff0045\" onChange={(e) => inputHandler(e)}/>\r\n            </div>\r\n\r\n            <div className=\"\">\r\n                <label htmlFor=\"ytitlecolor\">Y-Axis Title Color</label>\r\n                <input type=\"text\" name=\"ytitlecolor\" id=\"y-title-color\"  placeholder=\"Example: #ff0045\" onChange={(e) => inputHandler(e)}/>\r\n            </div>\r\n\r\n            <div>\r\n                <label htmlFor=\"xtitlesize\">X-Axis Title Size</label>\r\n                <input type=\"text\" name=\"xtitlesize\" id=\"x-title-size\" placeholder=\"Example: 2\" onChange={(e) => inputHandler(e)}/>\r\n            </div>\r\n\r\n  \r\n\r\n            <div>\r\n                <label htmlFor=\"ytitlesize\">Y-Axis Title Size</label>\r\n                <input type=\"text\" name=\"ytitlesize\" id=\"y-title-size\"  placeholder=\"Example: 2\" onChange={(e) => inputHandler(e)}/>\r\n            </div>\r\n\r\n            <div>\r\n                <label htmlFor=\"\">X Scale Color</label>\r\n                <input type=\"text\" placeholder=\"Example: green\" id=\"x-scale-color\" onChange={(e) => inputHandler(e)}/>\r\n            </div>\r\n\r\n            <div>\r\n                <label htmlFor=\"\">X Scale Size</label>\r\n                <input type=\"text\" placeholder=\"Example: 5\" id=\"x-scale-size\" onChange={(e) => inputHandler(e)}/>\r\n            </div>\r\n\r\n            <div>\r\n                <label htmlFor=\"\">Y Scale Color</label>\r\n                <input type=\"text\" placeholder=\"Example: green\" id=\"y-scale-color\" onChange={(e) => inputHandler(e)}/>\r\n            </div>\r\n\r\n            <div>\r\n                <label htmlFor=\"\">Y Scale Size</label>\r\n                <input type=\"text\"placeholder=\"Example: 5\" id=\"y-scale-size\" onChange={(e) => inputHandler(e)}/>\r\n            </div>\r\n\r\n            <div className=\"\">\r\n                <label htmlFor=\"showlines\">Show Lines</label>\r\n                <input type=\"checkbox\" id=\"showlines\" name=\"showlines\" onChange={(e) => inputHandler(e)}/>\r\n            </div>\r\n\r\n            <div className=\"\">\r\n                <label htmlFor=\"showgrid\">Show Grid</label>\r\n                <input type=\"checkbox\" name=\"showgrid\" id=\"showgrid\" onChange={(e) => inputHandler(e)}/>\r\n            </div>\r\n\r\n            <div className=\"\">\r\n                <label htmlFor=\"width\">Width</label>\r\n                <input type=\"number\" min=\"1\" max=\"20\"  name=\"width\" id=\"width\" placeholder=\"Example: 70\" onChange={(e) => inputHandler(e)}/>\r\n            </div>\r\n            \r\n            <div className=\"\">\r\n                <label htmlFor=\"tickangle\">Tick Angle</label>\r\n                <input type=\"range\" min=\"0\" max=\"100\" name=\"tickangle\" id=\"tick-angle\" onChange={(e) => inputHandler(e)}/>\r\n            </div>\r\n            \r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Cartesian\r\n","// CSS\r\nimport \"../../css/Fields.css\"\r\n\r\n// Redux\r\nimport { actionCreators } from \"../../../state/actionCreators/export\"\r\nimport { bindActionCreators } from \"redux\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\n\r\nconst Bars = () => {\r\n    const dispatch = useDispatch()\r\n    const { loadData } = bindActionCreators(actionCreators, dispatch)\r\n    const data = useSelector((state) => state.data)\r\n\r\n    const inputHandler = (e) => {\r\n        let graphData = { ...data }\r\n        const value = e.target.value\r\n        switch (e.target.id){\r\n            case \"text-inside\":\r\n                graphData.textInside = value.split(\",\")\r\n                break\r\n        }\r\n        loadData(graphData)\r\n    }\r\n\r\n    return (\r\n        <section className=\"\">\r\n            <div className=\"\">\r\n                <label htmlFor=\"text\">Text Inside</label>\r\n                <input type=\"text\" id=\"text-inside\" placeholder=\"use a comma to separate the values\" onChange={(e) => inputHandler(e)}/>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Bars\r\n","//CSS\r\nimport \"../../css/Fields.css\"\r\n\r\n// Components\r\nimport General from \"../Fields/General\"\r\nimport Cartesian from \"../Fields/Cartesian\"\r\nimport Bars from \"../Fields/Bars\"\r\n\r\n//Redux\r\nimport { actionCreators } from \"../../../state/actionCreators/export\"\r\nimport { bindActionCreators } from \"redux\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\n\r\n\r\nconst Bar = () => {\r\n    const dispatch = useDispatch()\r\n    const data = useSelector((state) => state.data)\r\n    const { loadData } = bindActionCreators(actionCreators, dispatch)\r\n    return (\r\n        <div className=\"field-container\">\r\n            <General/>\r\n            <Cartesian/>\r\n            <Bars/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Bar\r\n","import \"../../css/Fields.css\"\r\n\r\n// Redux\r\nimport { actionCreators } from \"../../../state/actionCreators/export\"\r\nimport { bindActionCreators } from \"redux\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\n\r\nconst Lines = () => {\r\n    const dispatch = useDispatch()\r\n    const { loadData } = bindActionCreators(actionCreators, dispatch)\r\n    const data = useSelector((state) => state.data)\r\n\r\n    const inputHandler = (e) => {\r\n        let graphData = {...data}\r\n        const value = e.target.value\r\n        switch (e.target.id){\r\n            case \"dot-size\":\r\n                graphData.dotSize = value\r\n                break\r\n        }\r\n        loadData(graphData)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"\">\r\n                <label htmlFor=\"dotsize\">Choose a Dot Size</label>\r\n                <input type=\"number\" id=\"dot-size\" min=\"1\" placeholder=\"Example: 2\" onChange={(e) => inputHandler(e)}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Lines\r\n","// CSS\r\nimport \"../../css/Fields.css\"\r\n\r\n// Components\r\nimport General from \"../Fields/General\"\r\nimport Cartesian from \"../Fields/Cartesian\"\r\nimport Lines from \"../Fields/Lines\"\r\n\r\n// Redux\r\nimport { actionCreators } from \"../../../state/actionCreators/export\"\r\nimport { bindActionCreators } from \"redux\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\n\r\nconst Line = () => {\r\n    const dispatch = useDispatch()\r\n    const data = useSelector((state) => state.data)\r\n    const { loadData} = bindActionCreators(actionCreators, dispatch)\r\n\r\n    return (\r\n        <div className=\"field-container\">\r\n            <General/>\r\n            <Cartesian/>\r\n            <Lines/>\r\n            <section>\r\n                <div>\r\n                    <label htmlFor=\"dash\">Choose a Line Type</label>\r\n                    <select name=\"dash\" id=\"\" onChange={(e) => loadData({...data, dash: e.target.value})}>\r\n                        <option value=\"\" disabled selected>Choose a Line Type</option>\r\n                        <option value=\"dash\">Dash</option>\r\n                        <option value=\"solid\">Solid</option>\r\n                        <option value=\"dot\">Dot</option>\r\n                        <option value=\"dashdot\">DashDot</option>\r\n                    </select>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Line\r\n","// CSS\r\nimport \"../../css/Fields.css\"\r\nimport { useState } from \"react\"\r\n\r\n\r\nimport General from \"../Fields/General\"\r\n\r\n// Redux\r\nimport { actionCreators } from \"../../../state/actionCreators/export\"\r\nimport { bindActionCreators } from \"redux\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nconst Pie = () => {\r\n    // const [graphData, setGraphData] = useState({type: \"pie\"})\r\n    const dispatch = useDispatch()\r\n    const data = useSelector((state) => state.data)\r\n    const { loadData } = bindActionCreators(actionCreators, dispatch)\r\n    return (\r\n        <div id=\"pie\" className=\"field-container\">\r\n            <General/>\r\n            <section>\r\n                <div className=\"hole\">\r\n                    <label htmlFor=\"hole\">Donut Size</label>\r\n                    <input type=\"number\" max=\"99\" min=\"0\" placeholder=\"Choose a number between 0 and 99\" onChange={(e) => loadData({...data, hole: ( parseInt(e.target.value) / 100 )})}/>\r\n                </div>\r\n                <div className=\"text-pos\">\r\n                    <label htmlFor=\"textposition\">Text Position</label>\r\n                    <select name=\"textposition\" id=\"\" onChange={(e) => loadData({...data, textPosition: e.target.value})}>\r\n                        <option value=\"\" disabled selected>Select Position</option>\r\n                        <option value=\"inside\">Inside</option>\r\n                        <option value=\"outside\">Outside</option>\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"display-text\">Display Text</label>\r\n                    <select name=\"textposition\" id=\"\" onChange={(e) => loadData({...data, pieText: e.target.value})}>\r\n                        <option value=\"\" disabled selected>Select Text Display</option>\r\n                        <option value=\"percent\">Percent</option>\r\n                        <option value=\"label+percent\">Label and Percent</option>\r\n                    </select>\r\n                </div>\r\n            </section>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pie\r\n","// CSS\r\nimport \"../../css/Fields.css\"\r\n\r\n\r\n// Components\r\nimport General from \"../Fields/General\"\r\nimport Cartesian from \"../Fields/Cartesian\"\r\nimport Bars from \"../Fields/Bars\"\r\n\r\n// Redux\r\nimport { actionCreators } from \"../../../state/actionCreators/export\"\r\nimport { bindActionCreators } from \"redux\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\n\r\nconst Histogram = () => {\r\n    const dispatch = useDispatch()\r\n    const { loadData } = bindActionCreators(actionCreators, dispatch)\r\n    const data = useSelector((state) => state.data)\r\n\r\n    const inputHandler = (e) => {\r\n        const value = e.target.value\r\n        let graphData = data\r\n        switch(e.target.id){\r\n            case \"histnorm\":\r\n                graphData.histNorm = value\r\n                break\r\n        }\r\n        loadData(graphData)\r\n    }\r\n    return (\r\n        <div className=\"field-container\">\r\n            <General/>\r\n            <Cartesian/>\r\n            <Bars/>\r\n            <section>\r\n                <div>\r\n                    <label htmlFor=\"Norm\">Norm of the Histogram</label>\r\n                    <select name=\"Norm\" id=\"histnorm\" onChange={(e) => inputHandler(e)}>\r\n                        <option value=\"\" selected disabled>Choose The Norm</option>\r\n                        <option value=\"count\">Count</option>\r\n                        <option value=\"percent\">Percent</option>\r\n                        <option value=\"density\">Density</option>\r\n                        <option value=\"probability\">Probability</option>\r\n                        <option value=\"probability density\">Probability Density</option>\r\n                    </select>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Histogram\r\n","// CSS\r\nimport \"../../css/Fields.css\"\r\n\r\n\r\n// Components\r\nimport General from \"../Fields/General\"\r\nimport Cartesian from \"../Fields/Cartesian\"\r\nimport Lines from \"../Fields/Lines\"\r\n\r\nconst Scatter = () => {\r\n    return (\r\n        <div className=\"field-container\">\r\n            <General/>\r\n            <Cartesian/>\r\n            <Lines/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scatter\r\n","import './App.css';\r\nimport { Switch, Route } from \"react-router-dom\"\r\n\r\n\r\n// Hooks\r\nimport { useEffect } from \"react\"\r\n\r\n// Import the components\r\nimport Download from './components/jsx/Download';\r\nimport Header from \"./components/jsx/Header\"\r\nimport Home from \"./components/jsx/Home\"\r\nimport Chart from \"./components/jsx/Chart\"\r\nimport Bar from \"./components/jsx/Graphs/Bar\"\r\nimport Line from \"./components/jsx/Graphs/Line\"\r\nimport Pie from \"./components/jsx/Graphs/Pie\"\r\nimport Histogram from \"./components/jsx/Graphs/Histogram\"\r\nimport Scatter from \"./components/jsx/Graphs/Scatter\"\r\n\r\nfunction App() {\r\n\r\n\r\n  return (\r\n      <div className=\"App\">\r\n          <Header/>\r\n          <div id=\"main\">\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Home}/>\r\n              <Route exact path=\"/line\" component={Line}/>\r\n              <Route exact path=\"/bar\" component={Bar}/>\r\n              <Route exact path=\"/pie\" component={Pie}/>\r\n              <Route exact path=\"/histogram\" component={Histogram}/>\r\n              <Route exact path=\"/scatter\" component={Scatter}/>\r\n              <Route exact path=\"/download\" component={Download}/>\r\n            </Switch>\r\n            {window.location.pathname !== \"/\" && <Chart/>}\r\n            \r\n          </div>\r\n\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const dataSample = {\r\n    x: [1, 2, 3], \r\n    y: [1, 2, 3],\r\n    type: \"scatter\",\r\n    mode: \"markers\",\r\n    width: 1,\r\n    colors: [\"lightblue\"],\r\n    size: [\"blue\"],\r\n    xTitleColor: \"black\"\r\n}\r\n\r\nconst dataReduser = (state=dataSample, action) => {\r\n    switch(action.type){\r\n        case \"update data\":\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default dataReduser","const typeReduser = (state=\"pie\", action) => {\r\n    switch(action.type){\r\n        case \"update graph\":\r\n            return action.payload\r\n        default:\r\n            return null\r\n        \r\n    }\r\n}\r\n\r\nexport default typeReduser","const typeReduser = (state=true, action) => {\r\n    switch(action.type){\r\n        case \"set device\":\r\n            return action.payload\r\n        default:\r\n            return true\r\n        \r\n    }\r\n}\r\n\r\nexport default typeReduser","import { combineReducers } from \"redux\"\r\nimport dataReduser from \"./dataReduser\"\r\nimport typeReduser from \"./typeReduser\"\r\nimport deviceReducer from \"./deviceReducer\"\r\n\r\n\r\nconst redusers = combineReducers({\r\n    data: dataReduser,\r\n    type: typeReduser,\r\n    canUse: deviceReducer\r\n})\r\n\r\nexport default redusers","import { createStore, applyMiddleware } from \"redux\"\r\nimport redusers from \"./reducers/combinedReducers\"\r\nimport thunk from \"redux-thunk\" \r\n\r\nexport const store = createStore(\r\n    redusers,\r\n    {},\r\n    applyMiddleware(thunk)\r\n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from \"./state/store\"\nimport { Provider } from \"react-redux\"\nimport { BrowserRouter } from \"react-router-dom\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}